using IgnitedBox.UnityUtilities.Vectors;
using Scripts.OOP.Game_Modes.CustomLevels;
using UnityEngine;

namespace Scripts.OOP.Game_Modes.Story.Chapters
{
    public class ChapterOne
    {
        public static StorySettings[] episodes = new StorySettings[]
        {
            new StorySettings(1, 1, "System Check")
            {
                Description = "ERROR \\\\\\\\ INCOMING INSTRUCTIONS \\\\\\\\",
                PlayerSpawn = new SerializableInt2(5, 6),
                Maps = new MapPreset[]
                {
                    new MapPreset(0, -14)
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 2},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                        },
                        props = new MapProp[]
                        {
                            new MapProp("Module1", "Props/Perks/PerkModule", 11.41f, 54.27f),
                        }
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, },
                            { 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, },
                            { 1, 1, 0, 0, 3, 3, 1, 1, 1, 3, 3, 3, 1, },
                            { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 3, 3, 1, },
                            { 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 1, },
                            { 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 3, 3, 1, },
                            { 1, 1, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 1, },
                            { 1, 1, 0, 0, 0, 3, 3, 1, 3, 3, 3, 3, 1, },
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, },
                            { 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 0, 2, 2, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                        props = new MapProp[]
                        {
                            new MapProp("ShieldModule", "Props/Perks/PerkModule", 3f, 0f, "Shield", 5, 0, 0),
                            new MapProp("Target1", "Props/Targets/TargetPractice", -6.78f, 8.39f, 100, 0),
                            new MapProp("Target2", "Props/Targets/TargetPractice", 11.81f, 8.59f, 100, 1),
                            new MapProp("Target3", "Props/Targets/TargetPractice", 11.31f, -11f, 100, 2),
                            new MapProp("Target4", "Props/Targets/TargetPractice", -6.06f, -9.95f, 100, 3),
                        }
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 3, 3, 1, 1, 1, 0, 0, 0, 1, },
                            { 1, 1, 1, 3, 3, 3, 1, 1, 1, 0, 0, 0, 1, },
                            { 1, 1, 0, 3, 3, 3, 1, 1, 1, 0, 0, 0, 1, },
                            { 1, 1, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 1, },
                            { 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 3, 3, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 3, 3, 3, 3, 1, 1, 1, 1, 1, },
                            { 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 2, 2, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                        props = new MapProp[]
                        {
                            new MapProp("Target1", "Props/Targets/TargetPractice", 9.45f, 9.4f, 1, 0),
                            new MapProp("LandMine1", "Projectiles/Landmine", 0, 5.12f, 0, 200),
                            new MapProp("LandMine2", "Projectiles/Landmine", 3, 5.12f, 0, 200),
                            new MapProp("LandMine3", "Projectiles/Landmine", 6, 5.12f, 0, 200),
                            new MapProp("LandMine4", "Projectiles/Landmine", 9, 5.12f, 0, 200),
                            new MapProp("LandMine5", "Projectiles/Landmine", 12, 5.12f, 0, 200),
                            new MapProp("LandMine6", "Projectiles/Landmine", 12, 7, 0, 200),
                            new MapProp("LandMine7", "Projectiles/Landmine", 12, 9, 0, 200),
                            new MapProp("LandMine8", "Projectiles/Landmine", 15, 5.12f, 0, 200),
                            new MapProp("LandMine9", "Projectiles/Landmine", 15, 7, 0, 200),
                            new MapProp("LandMine10", "Projectiles/Landmine", 15, 9, 0, 200),
                        }
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,},
                            { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,}
                        },
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,}
                        },
                        props = new MapProp[]
                        {
                            new MapProp("Target1", "Props/Targets/TargetPractice", -15.86f, 15.89f, 20, 15),
                            new MapProp("Target2", "Props/Targets/TargetPractice", 15.46f, 10.53f, 20, 15),
                            new MapProp("Target3", "Props/Targets/TargetPractice", 9.12f, -3f, 20, 15),
                            new MapProp("Target4", "Props/Targets/TargetPractice", -3.26f, -16.2f, 20, 15),

                            new MapProp("LandMine1", "Projectiles/Landmine", -10.27f, 8.52f, 0, 100),
                            new MapProp("LandMine2", "Projectiles/Landmine", 2.39f, 8.52f, 0, 100),
                            new MapProp("LandMine3", "Projectiles/Landmine", -10.27f, 0, 0, 100),
                            new MapProp("LandMine4", "Projectiles/Landmine", 2.39f, 0, 0, 100),
                            new MapProp("LandMine5", "Projectiles/Landmine", -10.27f, -10f, 0, 100),
                            new MapProp("LandMine6", "Projectiles/Landmine", 4.34f, -10f, 0, 100),
                        }
                    }

                },
                Main = new ObjectiveData[]
                {
                    //Room 1
                    new ObjectiveData("Reach Map", new Color(0,0,1,1), 1, "reach the training area"),
                    //Room 2
                    new ObjectiveData("Props Activation", new Color(0, 0, 1, 1), 10,
                        "Destroy the targets", "Target1", "Target2", "Target3", "Target4"),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1),
                        1, "CONTINUE \\_ STAGE"),
                    //Room 3
                    new ObjectiveData("Prop Activation", new Color(0, 0, 1, 1),
                        5, "Destroy the target using the landmines", "Target1"),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1),
                        1, "CONTINUE \\_ STAGE"),
                    //Room 3
                    new ObjectiveData("Spawn Prop", new Color(0, 0, 1, 1), 2, "Destroy the very slow target",
                        "Props/Targets/TargetPractice", 20, 5),
                    new ObjectiveData("Spawn Prop", new Color(0, 0, 1, 1), 2, "Destroy the slow target",
                        "Props/Targets/TargetPractice", 20, 8),
                    new ObjectiveData("Spawn Prop", new Color(0, 0, 1, 1), 2, "Destroy the standard target",
                        "Props/Targets/TargetPractice", 20, 12),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1),
                        1, "reach the next stage"),
                    //Room 5
                    new ObjectiveData("Props Activation", new Color(0, 0, 1, 1), 20,
                        "Destroy the last targets", "Target1", "Target2", "Target3", "Target4"),
                }
            },
            new StorySettings(1, 2, "Modular Equipment")
            {
                Description = "Systems Functional. Proceed",
                PlayerSpawn = new SerializableInt2(10, 14),
                Maps = new MapPreset[]
                {
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 1, 1, 1, },
                            { 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, },
                            { 1, 1, 0, 3, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 3, 1, 1, },
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                        props = new MapProp[]
                        {
                            new MapProp("Module1", "Props/Perks/PerkModule", 0, -14.03f, "Shield", 5, 0, 0),
                        }
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 2, 2,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,},
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,}
                        },
                    }
                },
                Main = new ObjectiveData[]
                {
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1), 1, "PROCEED"),

                    new ObjectiveData("Prop Activation", new Color(0, 0, 1, 1), 1,
                        "COLLECT MODULE/PERK", "Module1"),
                    new ObjectiveData("Spawn Prop", new Color(0, 0, 1, 1), 1,
                        "[shield] recharges a protective shield", "Props/Perks/PerkModule",
                        "Shield", 5, 0, 0),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1), 1, "PROCEED"),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the grunt", "Regular/Tier1/Regular", 1, 2)
                }
            },
            new StorySettings(1, 3, "Archetype: Bomber")
            {
                Description = "Find and Defeat the Bomber",
                PlayerSpawn = new SerializableInt2(4, 6),
                Maps = new MapPreset[]
                {
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, },
                            { 1, 1, 0, 3, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 3, 1, 1, },
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                        props = new MapProp[]
                        {
                            new MapProp("Module1", "Props/Perks/PerkModule", 0, -14.03f, "Health Regen", 5, 0, 0),
                        }
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 1, 1, 0, 3, 3, 3, 0, 0, 1, 0, 0, 1, 0, 0, 3, 3, 3, 0, 1, 1, },
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, },
                            { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, },
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, }
                        },
                    },
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,},
                            { 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 3, 3, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 3, 3, 3, 3, 3, 3, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 1,},
                            { 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 1, 1, 0, 3, 3, 1,},
                            { 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 1, 1, 1, 1, 0, 3, 1,},
                            { 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 0, 1, 1, 1, 1, 1, 1, 0, 1,},
                            { 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,}
                        },
                    }
                },
                Main = new ObjectiveData[]
                {
                    new ObjectiveData("Prop Activation", new Color(0, 1, 0, 1), 1,
                        "COLLECT MODULE/PERK", "Module1"),
                    new ObjectiveData("Spawn Prop", new Color(0, 1, 0, 1), 1,
                        "[health regen] regenerates health periodically", "Props/Perks/PerkModule",
                        "Health Regen", 5, 0, 0),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1), 1, "PROCEED"),

                    new ObjectiveData("Waves", Color.red, 20, "Elimenate the guards", 1, new (string, int)[][]
                    { 
                        new (string, int)[] { ("Regular/Tier 1/Regular", 0) },
                        new (string, int)[] { ("Regular/Tier 1/Regular", 0), ("Regular/Tier 1/Regular", 0) },
                    }),
                    new ObjectiveData("Reach Map", new Color(0, 0, 1, 1), 1, "PROCEED"),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the bomber", "Regular/Tier1/Bomber", 1, 0)
                }
            },
            new StorySettings(1, 4, "Combat Test")
            {
                Description = "Complete the combat test.",
                PlayerSpawn = new SerializableInt2(5, 5),
                Maps = new MapPreset[]
                {
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                        }
                    }
                },
                Main = new ObjectiveData[]
                {
                    new ObjectiveData("Spawn Prop", Color.yellow, 2, "Collect module/perk",  "Props/Perks/PerkModule", "Barrel Buff", 1, 0, 0),
                    new ObjectiveData("Spawn Prop", Color.yellow, 2, "[barrel buff] increases projectile damage", "Props/Perks/PerkModule", "Barrel Buff", 1, 0, 0),
                    
                    new ObjectiveData("Waves", Color.red, 20, "Enemies may use modules/perks", 1, new (string, int)[][]
                    {
                        new (string, int)[] { ("Regular/Tier1/Regular", 2) },             
                        new (string, int)[] { ("Regular/Tier1/Bomber", 2), ("Regular/Tier1/Regular", 2) },                        
                    }),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the sniper", "Regular/Tier1/Sniper", 1, 5 ),

                    new ObjectiveData("Spawn Prop", new Color(204/255f, 35/255f, 48/255f), 2, "Collect module/perk",  
                        "Props/Perks/PerkModule", "Charging Round", 5, 0, 0),
                    new ObjectiveData("Spawn Prop", new Color(204/255f, 35/255f, 48/255f), 2, "[charging round] increases projectile damage over airtime", 
                        "Props/Perks/PerkModule", "Charging Round", 5, 0, 0),

                    new ObjectiveData("Waves", Color.red, 20, "defeat the guards", 1, new (string, int)[][]
                    {
                        new (string, int)[] { ("Regular/Tier1/Regular", 5) },
                        new (string, int)[] { ("Regular/Tier1/Bomber", 5), ("Regular/Tier1/Regular", 5) },
                        new (string, int)[] { ("Regular/Tier1/Bomber", 5), ("Regular/Tier1/Bomber", 8), ("Regular/Tier1/Regular", 5) },
                    }),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the tank", "Regular/Tier1/Tank", 1, 8 ),                   
                }
            },
            new StorySettings(1, 5, "Chase")
            {
                Description = "Complete the bomber test.",
                PlayerSpawn = new SerializableInt2(5, 5),
                Maps = new MapPreset[]
                {
                    new MapPreset()
                    {
                        tiles = new int[,]
                        {
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 1,},
                            { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,},
                        }
                    }
                },
                Main = new ObjectiveData[]
                {
                    new ObjectiveData("Spawn Prop", Color.gray, 2, "Collect module/perk",  "Props/Perks/PerkModule", "Mine Drop", 5, 0, 0),
                    new ObjectiveData("Spawn Prop", Color.gray, 2, "[Mine Drop] grants a chance to lay friendly land mines when firing",
                        "Props/Perks/PerkModule", "Mine Drop", 5, 0, 0),
                    
                    new ObjectiveData("Waves", Color.red, 20, "Survive The waves", 1, new (string, int)[][]
                    {
                        new (string, int)[] { ("Regular/Tier1/Bomber", 2), ("Regular/Tier1/Bomber", 2), },                       
                        new (string, int)[] { ("Regular/Tier1/Bomber", 2), ("Regular/Tier1/Bomber", 2), ("Regular/Tier1/Bomber", 2), },                       
                        new (string, int)[] { ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 2), ("Regular/Tier1/Bomber", 2), },                       
                    }),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the bomber boss", "Regular/Tier1/Bomber", 1, 10 ),

                    new ObjectiveData("Spawn Prop", new Color(196/255f, 129/255f, 67/255f), 2, "Collect module/perk",  
                        "Props/Perks/PerkModule", "Thorns", 5, 0, 0),
                    new ObjectiveData("Spawn Prop", new Color(196/255f, 129/255f, 67/255f), 2,
                        "[Thorns] grant impact damage", "Props/Perks/PerkModule", "Thorns", 5, 0, 0),

                    new ObjectiveData("Waves", Color.red, 20, "Survive The waves", 1, new (string, int)[][]
                    {
                        new (string, int)[] { ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), },
                        new (string, int)[] { ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), },
                        new (string, int)[] 
                        { 
                            ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6),
                            ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6)
                        },
                        new (string, int)[]
                        {
                            ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6),
                            ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6),
                            ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6), ("Regular/Tier1/Bomber", 6)
                        },
                    }),

                    new ObjectiveData("Target Enemy", new Color(1, 0, 0, 1), 5,
                        "defeat the last bomber boss", "Regular/Tier1/Bomber", 1, 12 ),                   
                }
            }
        };
    }
}
